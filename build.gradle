/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'james' at '10/11/16 10:49' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

import java.util.regex.Matcher

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://jenkins.cs.ox.ac.uk/artifactory/libs-snapshot-local"
        }
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
    }
}

plugins {
    id 'net.researchgate.release' version '2.4.0'
}

// Apply the java plugin to add support for Java
apply plugin: 'java'

//apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

//apply plugin: 'artifactory-publish'



//groupId = 'ox.softeng.metadatacatalogue'
//version = '1.0'
//def artifactId = projectDir.name
//def versionNumber = version

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {
        url "https://jenkins.cs.ox.ac.uk/artifactory/libs-snapshot-local"
    }

}

// These two lines are required to ensure JPA entity scanning works.
sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDir
sourceSets.test.output.resourcesDir = sourceSets.test.output.classesDir

// In this section you declare the dependencies for your production and test code
dependencies {

    compile group: 'commons-beanutils', name: 'commons-beanutils', version:'1.9.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.7.2'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version:'2.6.0'
    compile group: 'junit', name: 'junit', version:'4.11'


}

task sourcesJar(type: Jar, dependsOn: classes) {
    group 'build'
    classifier = 'sources'
    from sourceSets.main.allSource
}

tasks.javadoc.failOnError false
task javadocJar(type: Jar, dependsOn: javadoc) {
    group 'build'
    classifier = 'javadoc'
    from javadoc.destinationDir
}

def manifestAttrs = [
        "Created-By"            : "${JavaVersion.current().toString()} JVM, ${gradle.gradleVersion} Gradle",
        "Specification-Title"   : "$rootProject.name $project.name Classes",
        "Specification-Version" : version,
        "Implementation-Title"  : "${project.group.toLowerCase()}.${project.name.toLowerCase()}",
        "Implementation-Version": "${version}.dev",
        "Implementation-Vendor" : "Oxford University",
]
jar {
    manifest {
        attributes(manifestAttrs)
    }

}

/**
 * Add jars as artifacts, this will cause them to be built as part of assemble and will automatically be
 * included as part of the publishing mechanism.
 * For some reason, some change made has meant that any tars included stop the automatic addition of the standard
 * jar file, therefore we define it as required.
 */
artifacts {
    archives sourcesJar
    archives javadocJar
}


artifactory {
    // The variables for these credentials are in ~/.gradle/gradle.properties
    contextUrl = "${artifactory_contextUrl}" // base artifactory url
    publish {
        repository {
            repoKey = 'libs-release-local'   //The Artifactory repository key to publish to

            username = "${artifactory_user}"
            password = "${artifactory_apiKey}"
            maven = true
        }
        defaults {
            publications ('mavenJava')
        }
    }
}

artifactoryPublish {
    dependsOn build
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

release {
    failOnCommitNeeded = false
    failOnPublishNeeded = false
    failOnSnapshotDependencies = false
    failOnUnversionedFiles = false
    failOnUpdateNeeded = false
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '${version}'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    buildTasks = ['build']
    versionPatterns = [
            /(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
    ]
    scmAdapters = [
            net.researchgate.release.GitAdapter,
            net.researchgate.release.SvnAdapter,
            net.researchgate.release.HgAdapter,
            net.researchgate.release.BzrAdapter
    ]

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = true
    }

}